{"version":3,"file":"static/js/865.ea95002b.chunk.js","mappings":"sPAEMA,EACC,sCADDA,EAEC,mCAGDC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,wNAIOC,EAAW,mCAAG,WAAMC,GAAN,uFACFC,EAAAA,EAAAA,IAAA,UAClBR,GADkB,OACDO,EADC,4BACqBP,GAC1CC,GAHuB,cACnBQ,EADmB,yBAKlBA,GALkB,2CAAH,sDCfxB,EAA2B,uBAA3B,EAA8D,wB,SCuD9D,EAnDa,WACX,OAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WACR,IACE,IAAMC,EAAa,mCAAG,oGACGV,EAAYW,OAAOJ,IADtB,UAEI,OADlBK,EADc,QAEPC,OAFO,yCAGXP,EAAaM,EAASE,KAAKC,OAHhB,2CAAH,qDAMnBL,GAGD,CAFC,MAAOM,GACPC,QAAQC,IAAIF,EAAMG,QACnB,CACF,GAAE,CAACZ,KAGF,0BACE,eAAIa,UAAWC,EAAf,SACGhB,EAAUiB,KAAI,SAAAC,GACb,OACE,0BAC0B,OAAvBA,EAAMC,cACL,gBACEC,IACE,gEAEFC,IAAI,UACJC,MAAM,SAGR,gBACEF,IAAG,yCAAoCF,EAAMC,cAC7CE,IAAKH,EAAMK,KACXD,MAAM,QAITJ,EAAMM,eACP,eAAGT,UAAWC,EAAd,wBAAyCE,EAAMO,eAlBxCP,EAAMtB,GAqBlB,OAIR,C","sources":["services/fetchActors.js","webpack://react-homework-template/./src/components/cast/cast.module.css?44e2","components/cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst fetchLinks = {\n  URL: 'https://api.themoviedb.org/3/movie/',\n  KEY: '39009e1fbdefdc1ea3efc46fca7ed6e3',\n};\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzOTAwOWUxZmJkZWZkYzFlYTNlZmM0NmZjYTdlZDZlMyIsInN1YiI6IjY0N2NkMjBiMjYzNDYyMDBmOTI5NWRkZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.LAF8CyGvOhHBE3e-x8-tvz8nNI4gXsXcDzwmj4Y_YN0',\n  },\n};\n\nexport const fetchActors = async id => {\n  const response = await axios.get(\n    `${fetchLinks.URL}${id}/credits?api_key=${fetchLinks.KEY}`,\n    options\n  );\n  return response;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"cast_castList__UX8mR\",\"character\":\"cast_character__6wpjZ\"};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchActors } from '../../services/fetchActors';\nimport css from './cast.module.css';\n\nconst Cast = () => {\n  const [castArray, setCastArray] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    try {\n      const getActorsData = async () => {\n        const responce = await fetchActors(Number(movieId));\n        if (responce.status === 200) {\n          return setCastArray(responce.data.cast);\n        }\n      };\n      getActorsData();\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul className={css.castList}>\n        {castArray.map(actor => {\n          return (\n            <li key={actor.id}>\n              {actor.profile_path === null ? (\n                <img\n                  src={\n                    'https://upload.wikimedia.org/wikipedia/en/6/60/No_Picture.jpg'\n                  }\n                  alt=\"No foto\"\n                  width=\"128\"\n                />\n              ) : (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n                  alt={actor.name}\n                  width=\"128\"\n                />\n              )}\n\n              {actor.original_name}\n              <p className={css.character}>Character: {actor.character}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["fetchLinks","options","method","headers","accept","Authorization","fetchActors","id","axios","response","useState","castArray","setCastArray","movieId","useParams","useEffect","getActorsData","Number","responce","status","data","cast","error","console","log","message","className","css","map","actor","profile_path","src","alt","width","name","original_name","character"],"sourceRoot":""}
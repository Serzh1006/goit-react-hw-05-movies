{"version":3,"file":"static/js/62.13296397.chunk.js","mappings":"oPAEMA,EACC,sCADDA,EAEC,mCAGDC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,wNAIOC,EAAY,mCAAG,WAAMC,GAAN,uFACHC,EAAAA,EAAAA,IAAA,UAClBR,GADkB,OACDO,EADC,4BACqBP,GAC1CC,GAHwB,cACpBQ,EADoB,yBAKnBA,GALmB,2CAAH,sDCfzB,EAA8B,6B,SC6C9B,EAzCgB,WACd,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCH,EAAAA,EAAAA,WAAS,GAAjD,eAAOK,EAAP,KAAqBC,EAArB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IACE,IAAMC,EAAU,mCAAG,sGACMZ,EAAaa,OAAON,IAD1B,OAEO,OADlBJ,EADW,QAEJW,SAEY,KADjBC,EAAcZ,EAASa,KAAKC,SACtBC,OACRZ,EAAeS,GACfL,GAAgB,IANL,2CAAH,qDAUhBE,GACgB,CAAhB,MAAOO,GAAS,CACnB,GAAE,CAACZ,KAGF,yBACIE,GAYA,qEAXA,eAAIW,UAAWC,EAAf,SACGhB,EAAYiB,KAAI,SAAAC,GACf,OACE,2BACE,oCAAYA,EAAIC,UACfD,EAAIE,UAFEF,EAAItB,GAKhB,OAOV,C","sources":["services/fetchReviews.js","webpack://react-homework-template/./src/components/reviews/reviews.module.css?dfbc","components/reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst fetchLinks = {\n  URL: 'https://api.themoviedb.org/3/movie/',\n  KEY: '39009e1fbdefdc1ea3efc46fca7ed6e3',\n};\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzOTAwOWUxZmJkZWZkYzFlYTNlZmM0NmZjYTdlZDZlMyIsInN1YiI6IjY0N2NkMjBiMjYzNDYyMDBmOTI5NWRkZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.LAF8CyGvOhHBE3e-x8-tvz8nNI4gXsXcDzwmj4Y_YN0',\n  },\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `${fetchLinks.URL}${id}/reviews?api_key=${fetchLinks.KEY}`,\n    options\n  );\n  return response;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"reviews_reviewsList__LkXr4\"};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchReviews } from 'services/fetchReviews';\nimport css from './reviews.module.css';\n\nconst Reviews = () => {\n  const [infoReviews, setInfoReviews] = useState([]);\n  const { movieId } = useParams();\n  const [reviewsEmpty, setReviewsEmpty] = useState(false);\n\n  useEffect(() => {\n    try {\n      const getReviews = async () => {\n        const response = await fetchReviews(Number(movieId));\n        if (response.status === 200) {\n          const reviewsData = response.data.results;\n          reviewsData.length !== 0\n            ? setInfoReviews(reviewsData)\n            : setReviewsEmpty(true);\n        }\n      };\n\n      getReviews();\n    } catch (error) {}\n  }, [movieId]);\n\n  return (\n    <div>\n      {!reviewsEmpty ? (\n        <ul className={css.reviewsList}>\n          {infoReviews.map(obj => {\n            return (\n              <li key={obj.id}>\n                <p>Author: {obj.author}</p>\n                {obj.content}\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["fetchLinks","options","method","headers","accept","Authorization","fetchReviews","id","axios","response","useState","infoReviews","setInfoReviews","movieId","useParams","reviewsEmpty","setReviewsEmpty","useEffect","getReviews","Number","status","reviewsData","data","results","length","error","className","css","map","obj","author","content"],"sourceRoot":""}